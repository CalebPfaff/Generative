{
  // Place your Generative workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Square Image Link": {
    "prefix": "new",
    "body": [
      "<div class=\"image11\">",
      "  <a href=\"./sketches/${1:example}/index.html\"",
      "    ><img class=\"image11\" src=\"./assets/sketch_images/${1:example}.png\"",
      "  /></a>",
      "</div>"
    ],
    "description": "Square Image Link"
  },
  "16:9 Image Link": {
    "prefix": "new169",
    "body": [
      "<div class=\"image169\">",
      "  <a href=\"./sketches/${1:example}/index.html\"",
      "    ><img class=\"image169\" src=\"./assets/sketch_images/${1:example}.png\"",
      "  /></a>",
      "</div>"
    ],
    "description": "16:9 Image Link"
  },
  "p5.js Basic Grid function": {
    "prefix": "basicGrid",
    "body": [
      "function basicGrid(rows, columns = rows) {",
      "    cw = w / rows",
      "    ch = h / columns",
      "    for (let i = 0; i < w; i += cw) {",
      "      for (let j = 0; j < h; j += ch) {",
      "        if (i == 0 || j == 0 || i >= cw * rows - cw || j >= ch * columns - ch) {",
      "          continue",
      "        } else {",
      "          ${1:example}",
      "        }",
      "      }",
      "    }",
      "  }"
    ],
    "description": "p5.js Basic Grid function"
  }
}
